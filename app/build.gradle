buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

task printProps {
    doLast {
        println GOOGLE_MAPS_API_KEY
    }
}

//https://developer.android.com/studio/publish/app-signing.html
def loadKeyStoreProperties() {
// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
    def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
    def keyStoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
    keyStoreProperties.load(new FileInputStream(keystorePropertiesFile))
    return keyStoreProperties
}

def keyStoreProperties = loadKeyStoreProperties()


//https://developer.android.com/studio/build/build-variants.html#signing
//https://developer.android.com/studio/build/manifest-build-variables.html
android {

    flavorDimensions "withproguard"

    signingConfigs {
        release {
            keyPassword keyStoreProperties['NEGA_RELEASE_KEY_PASSWORD']
            storeFile file(keyStoreProperties['NEGA_RELEASE_KEYSTORE'])
            storePassword keyStoreProperties['NEGA_RELEASE_STORE_PASSWORD']
            keyAlias keyStoreProperties['NEGA_RELEASE_KEY_ALIAS']
        }
        debug {
            keyPassword keyStoreProperties['NEGA_DEBUG_KEY_PASSWORD']
            storeFile file(keyStoreProperties['NEGA_DEBUG_KEYSTORE'])
            storePassword keyStoreProperties['NEGA_DEBUG_STORE_PASSWORD']
            keyAlias keyStoreProperties['NEGA_DEBUG_KEY_ALIAS']
        }
    }

    compileSdkVersion 26
    buildToolsVersion "$build_tools_version"
    defaultConfig {
        applicationId "com.janeullah.apps.healthinspectionviewer"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 16
        versionName "4.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //https://developer.android.com/studio/build/multidex.html
        multiDexEnabled true
    }
    buildTypes {
        release {
            debuggable false
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            //https://medium.com/@jonfinerty/beginner-to-proguard-b3327ff3a831
            proguardFiles fileTree('proguard').asList().toArray()
            signingConfig signingConfigs.release
            manifestPlaceholders = [google_map_key: GOOGLE_MAPS_API_KEY, fabric_api_key: FABRIC_API_KEY]
        }
        debug {
            debuggable true
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            //https://medium.com/@jonfinerty/beginner-to-proguard-b3327ff3a831
            proguardFiles fileTree('proguard').asList().toArray()
            signingConfig signingConfigs.debug
            manifestPlaceholders = [google_map_key: GOOGLE_MAPS_API_KEY, fabric_api_key: FABRIC_API_KEY]
        }

        //https://stackoverflow.com/questions/17197636/is-it-possible-to-declare-a-variable-in-gradle-usable-in-java
        //http://stackoverflow.com/questions/35722904/saving-the-api-key-in-gradle-properties
        //http://stackoverflow.com/questions/33134031/is-there-a-safe-way-to-manage-api-keys
        buildTypes.each {
            it.buildConfigField 'String', 'YELP_CLIENT_ID', YELP_CLIENT_ID
            it.buildConfigField 'String', 'YELP_CLIENT_SECRET', YELP_CLIENT_SECRET
            it.buildConfigField 'String', 'AWS_ES_READONLY_ACCESS_KEY', AWS_ES_READONLY_ACCESS_KEY
            it.buildConfigField 'String', 'AWS_ES_READONLY_SECRET', AWS_ES_READONLY_SECRET
            it.buildConfigField 'String', 'AWS_ES_HOST', AWS_ES_HOST
            it.buildConfigField 'String', 'HEROKU_NEGA_ES_HOST', HEROKU_NEGA_ES_HOST
        }
    }

    //https://developer.android.com/studio/build/shrink-code.html
    productFlavors {
        proguard {
            dimension "withproguard"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

android.applicationVariants.all {
    // Set this to false to disable Firebase Performance Monitoring at compile time
    FirebasePerformance {
        instrumentationEnabled false
    }
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$compile_sdk_version"
    resolutionStrategy.force "com.android.support:appcompat-v7:$compile_sdk_version"
    resolutionStrategy.force 'com.squareup.okhttp3:okhttp:3.7.0'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.13@aar') {
        transitive = true;
    }
    compile "com.android.support:appcompat-v7:$compile_sdk_version"
    compile "com.android.support:recyclerview-v7:$compile_sdk_version"
    compile "com.android.support:cardview-v7:$compile_sdk_version"
    compile "com.android.support:design:$compile_sdk_version"
    compile "com.android.support:support-v4:$compile_sdk_version"
    compile "com.google.firebase:firebase-messaging:$firebase_version"
    compile "com.google.firebase:firebase-core:$firebase_version"
    compile "com.google.firebase:firebase-database:$firebase_version"
    compile "com.google.firebase:firebase-crash:$firebase_version"
    compile "com.google.firebase:firebase-config:$firebase_version"
    compile "com.google.firebase:firebase-appindexing:$firebase_version"
    compile("com.squareup.retrofit2:retrofit:$retrofit_version") {
        exclude module: 'okhttp'
    }
    compile "com.google.android.gms:play-services-maps:$google_maps_services_version"
    compile "org.parceler:parceler-api:$parceler_version"
    compile "com.jakewharton:butterknife:$butterknife_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.facebook.stetho:stetho:$facebook_stetho_version"
    compile "com.facebook.stetho:stetho-okhttp3:$facebook_stetho_version"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    annotationProcessor "org.parceler:parceler:$parceler_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"
    annotationProcessor 'com.google.auto.value:auto-value:1.2'
    testCompile 'com.google.auto.value:auto-value:1.5.2'
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    compile 'com.google.maps:google-maps-services:0.1.20'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.firebaseui:firebase-ui-database:1.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'org.apache.commons:commons-text:1.0'
    compile 'com.yelp.clientlib:yelp-android:3.0.0'
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.android.support:multidex:1.0.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.11.0'
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    compile "com.google.firebase:firebase-perf:$firebase_version"
    compile "com.android.support.test.espresso:espresso-idling-resource:$espresso_version"

    //https://github.com/aws/aws-sdk-android/blob/master/aws-android-sdk-cognitoidentityprovider/pom.xml
    compile "com.amazonaws:aws-android-sdk-cognitoidentityprovider:$amazon_sdk_version"
    compile "com.amazonaws:aws-android-sdk-core:$amazon_sdk_version"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support:support-annotations:$compile_sdk_version"
    androidTestCompile 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
}

apply plugin: 'com.google.gms.google-services'
